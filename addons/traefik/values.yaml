# Traefik Configuration for Kubernetes Gateway API
# Optimized for AWS EKS with NLB integration
# Compatible with EKS cluster version 1.32 and Traefik v3.2

########################################################################################################################
# Global Configuration
########################################################################################################################
global:
  # Disable sending anonymous usage statistics
  sendAnonymousUsage: false

########################################################################################################################
# Image Configuration
########################################################################################################################
image:
  # Use official Traefik image
  registry: docker.io
  repository: traefik
  tag: "v3.4.1"
  pullPolicy: IfNotPresent

########################################################################################################################
# Deployment Configuration
########################################################################################################################
deployment:
  enabled: true
  kind: Deployment
  replicas: 1
  minReadySeconds: 10
  
  # Pod disruption budget for high availability
  podDisruptionBudget:
    enabled: false
    maxUnavailable: 1

  # Rolling update strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1

########################################################################################################################
# Pod Configuration
########################################################################################################################
# Security context for enhanced security
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  fsGroup: 65532

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
    add:
      - NET_BIND_SERVICE
  readOnlyRootFilesystem: true

########################################################################################################################
# Service Account Configuration
########################################################################################################################
serviceAccount:
  create: true
  name: "traefik"
  annotations: {}  # Set via Terraform for IRSA

########################################################################################################################
# RBAC Configuration
########################################################################################################################
rbac:
  enabled: true
  
# Cluster Role permissions for Gateway API
clusterRole:
  enabled: true

########################################################################################################################
# Traefik Configuration
########################################################################################################################
# Static configuration
additionalArguments:
  # Gateway API Provider Configuration
  - "--providers.kubernetesgateway"
  - "--providers.kubernetesgateway.experimentalChannel=true"
  - "--providers.kubernetesgateway.throttleDuration=2s"
  
  # Certificate Resolvers
  - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
  - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
  - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
  
  # Metrics and monitoring
  - "--metrics.prometheus=true"
  - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
  - "--entrypoints.metrics.address=:8080"
  
  # API and dashboard
  - "--api.dashboard=true"
  - "--api.insecure=false"
  
  # Health checks
  - "--ping=true"
  - "--ping.entrypoint=traefik"

########################################################################################################################
# Ports Configuration
########################################################################################################################
ports:
  traefik:
    port: 9000
    expose:
      default: false
    exposedPort: 9000
    protocol: TCP
  
  web:
    port: 8000
    expose:
      default: true
    exposedPort: 80
    protocol: TCP
    healthchecksPort: 8080
    redirectTo:
      port: websecure
      scheme: https
      permanent: true
  
  websecure:
    port: 8443
    expose:
      default: true
    exposedPort: 443
    protocol: TCP
    healthchecksPort: 8080
    tls:
      enabled: true
      options: ""
      certResolver: "letsencrypt"
  
  metrics:
    port: 8080
    expose:
      default: false
    exposedPort: 8080
    protocol: TCP

########################################################################################################################
# Service Configuration for NLB
########################################################################################################################
service:
  enabled: true
  single: true
  type: LoadBalancer
  
  # NLB-specific annotations
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
  
  # Service labels
  labels: {}
  
  # Load balancer configuration
  spec:
    externalTrafficPolicy: Local
    loadBalancerSourceRanges: []
  
  # Health check configuration
  loadBalancerHealthCheckGracePeriodSeconds: 60

########################################################################################################################
# Persistence Configuration
########################################################################################################################
persistence:
  enabled: true
  name: data
  accessMode: ReadWriteOnce
  size: 128Mi
  storageClass: "gp2"
  path: /data
  annotations: {}

########################################################################################################################
# Resource Configuration
########################################################################################################################
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 256Mi

########################################################################################################################
# Autoscaling Configuration
########################################################################################################################
autoscaling:
  enabled: false  # Disabled in favor of fixed replicas for testing
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70

########################################################################################################################
# Health Checks Configuration
########################################################################################################################
readinessProbe:
  failureThreshold: 1
  initialDelaySeconds: 2
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2

livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 2
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2

########################################################################################################################
# Logs Configuration
########################################################################################################################
logs:
  general:
    level: DEBUG
    filePath: ""
  access:
    enabled: true
    filePath: ""
    format: json
    bufferingSize: 100

########################################################################################################################
# Metrics Configuration
########################################################################################################################
metrics:
  prometheus:
    addEntryPointsLabels: true
    addServicesLabels: true
    addRoutersLabels: true
    buckets:
      - 0.1
      - 0.3
      - 1.2
      - 5.0
    disableAPICheck: false

########################################################################################################################
# Tracing Configuration (Optional)
########################################################################################################################
tracing:
  jaeger:
    enabled: false
  otlp:
    enabled: false

########################################################################################################################
# TLS Configuration
########################################################################################################################
tlsOptions:
  default:
    minVersion: "VersionTLS12"
    maxVersion: "VersionTLS13"
    cipherSuites:
      - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
      - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
      - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"

########################################################################################################################
# Node Selector and Affinity
########################################################################################################################
nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - traefik
          topologyKey: kubernetes.io/hostname

########################################################################################################################
# Environment Variables
########################################################################################################################
env:
  - name: POD_NAME
    valueFrom:
      fieldRef:
        fieldPath: metadata.name
  - name: POD_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace

########################################################################################################################
# Additional Volumes and Volume Mounts
########################################################################################################################
volumes:
  - name: tmp
    emptyDir: {}
  - name: plugins-storage
    emptyDir: {}

volumeMounts:
  - name: tmp
    mountPath: /tmp
  - name: plugins-storage
    mountPath: /plugins-storage

########################################################################################################################
# Experimental Features
########################################################################################################################
experimental:
  v3:
    enabled: false
  plugins:
    enabled: false
  kubernetesGateway:
    enabled: true
    # Certificate management
    certificateGeneration:
      enabled: true
      resolvers:
        - letsencrypt

########################################################################################################################
# Hub Configuration (Traefik Hub integration)
########################################################################################################################
hub:
  enabled: false

########################################################################################################################
# Additional Labels
########################################################################################################################
commonLabels:
  app.kubernetes.io/component: "ingress-controller"
  app.kubernetes.io/part-of: "traefik"

########################################################################################################################
# Priority Class
########################################################################################################################
priorityClassName: "system-cluster-critical"
