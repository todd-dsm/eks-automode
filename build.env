#!/usr/bin/env bash
# shellcheck disable=SC2155,SC2154
# PURPOSE:  Generate some variables for AWS/EKS. This file is called with one
#           argument while sourcing it in.
# -----------------------------------------------------------------------------
#    EXEC:  source build.env <prod|stage>
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Check for arguments
if [[ "$#" -lt 1 ]]; then
    echo "Bro, where's my first argument: stage or prod?"
    return
fi

set -x

# -----------------------------------------------------------------------------
# Company/Organization Configuration
export myCo='smpl-cloud'
export myDept='vcircuits'
export myProject='gitops-demo'
export myComponent='base-infras'
export myComponent='base-infras'


# -----------------------------------------------------------------------------
# DNS and Regional Configuration
export dns_zone='ptest.us'
export zone_private='false'
export AWS_DEFAULT_REGION='us-east-1'
export region="$AWS_DEFAULT_REGION"

# -----------------------------------------------------------------------------
# Environment Configuration
export env_build="$1"
export project="$myProject-$env_build"
export cluster_apps="$project"
export cluster_version='1.32'

# -----------------------------------------------------------------------------
# Terraform Backend Configuration
export bucketKey='env'
export providerVersTFM='1.11.4'
export providerVersAWS='5.99.1'
#export providerVersAWS='6.0.0'
export providerVersKubes='2.37.1'
export providerVersRandom='3.7.2'
export state_bucket="$myDept-$myProject"

# -----------------------------------------------------------------------------
# Observability
#observability_data_retention_days=365
#vpc_flow_logs_traffic_type="ALL"
vpc_flow_logs_retention_days=30             # 90 for production
vpc_flow_logs_max_aggregation_interval=60   # seconds (60 or 600)
observability_tool="grafana"                # or "datadog"



# -----------------------------------------------------------------------------
# Environment-Specific Network Configuration
case "$env_build" in
    stage)
        vpc_cidr='10.1.0.0/16'
        observability_archive_retention_days='90'
        ;;
    prod)
        vpc_cidr='10.0.0.0/16'
        observability_archive_retention_days='2557'     # 7 years
        ;;
    *)  echo "$env_build is unsupported; exiting."
        ;;
esac

# -----------------------------------------------------------------------------
# Templating
export template_dir='./templates'
# Home Network Security - SG for Remote Logins
export officeIPAddr="$(curl -s4 icanhazip.com)/32"

# -----------------------------------------------------------------------------
# Generate Terraform Provider Configuration
scripts/setup/create-tf-provider.sh

# -----------------------------------------------------------------------------
# Generate terraform.tfvars file in root directory
# -----------------------------------------------------------------------------
terraform_constants='terraform.tfvars'

cat > "$terraform_constants" <<EOF
# Generated from build.env for $myCo $env_build environment
# Date: $(date +%Y-%m-%d)

# Company/Organization Configuration
#my_company = "$myCo"
#my_project = "$myProject"
#component = "$myComponent"

# Environment Configuration
env_build = "$env_build"
project = "$project"
region = "$region"

# DNS Configuration
dns_zone = "$dns_zone"
zone_private = $zone_private

# Network Configuration
vpc_cidr = "$vpc_cidr"
#office_ip_addr = "$officeIPAddr"

# Observability
#vpc_flow_logs_traffic_type = "$vpc_flow_logs_traffic_type"
#vpc_flow_logs_retention_days = "$vpc_flow_logs_retention_days"
#vpc_flow_logs_max_aggregation_interval = "$vpc_flow_logs_max_aggregation_interval"
#observability_archive_retention_days = "$observability_archive_retention_days"
#observability_tool = "$observability_tool"

# Cluster Configuration
#cluster_apps = "$cluster_apps"
cluster_version = "$cluster_version"

# Backend Configuration
state_bucket = "$state_bucket"
#bucket_key = "$bucketKey"
EOF

# Format the file
terraform fmt "$terraform_constants"

set +x
